### How to Use and Run the Project Files and Codes

To convert an image into a sketch, you'll use the `sketch.py` script. This script leverages OpenCV to apply a series of transformations to an image to produce a sketch-like effect. To begin, ensure you have an image file named `test_image.jpg` in the same directory as the script. Run the `sketch.py` script, which reads the input image, converts it to grayscale, inverts the grayscale image, and applies a Gaussian blur to the inverted image. The script then creates an inverted blur image and divides the grayscale image by this inverted blur image, resulting in a sketch effect. Finally, the script saves the resulting sketch image as `sketch_image.jpg` in the same directory. Make sure you have OpenCV installed in your Python environment before running the script.

### Explanation of the Algorithms Used

The `sketch.py` script uses several image processing techniques to convert a regular image into a sketch. The process starts with reading the image and converting it to grayscale using OpenCV's `cvtColor` function, which simplifies the image to shades of gray. The grayscale image is then inverted using the `bitwise_not` function, producing a negative of the image. Next, a Gaussian blur is applied to the inverted image with a kernel size of 21x21 to smooth out details and noise. The blurred image is then inverted again to create an inverted blur image. Finally, the script uses the `divide` function to blend the grayscale image and the inverted blur image, scaling the result to enhance the sketch effect. This blending technique highlights the edges and lines in the image, mimicking a pencil sketch. The result is saved as `sketch_image.jpg`, providing a sketched version of the original image with clear, crisp lines and shading.